{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About This program was created as an internal tool to help simulate the amount of congestion in a public area, and analyze how the placement of queues and waypoints can affect the throughput of agents over a duration of time. Advanced User Settings Advanced User Settings are settings that should not be changed or reconfigured unless the user knows exactly what they are doing. All Advanced User Settings are specifically labeled on all settings defined in these docs. These settings are already configured, and the average user should NEVER need to change them. Changing Advanced User Settings can easily break the entire simulation if not careful. Not all configurable parts of this program are listed in this documentation. It is restricted to only the most essential pieces that the average user will be required to understand and configure. Weights Many elements of this program use the concept of weights. This is a way to assign a certain basis that an element will be selected randomly from a group of other elements. Whenever a weight is used in relation to something in this program, it does NOT represent a percent chance that element will be selected. Rather, it represents the weight relative to the weights of the other elements in the group that it will be selected. For example, if two elements in a list have a weight of 1, this does not mean they both have a 100% chance of being selected, but rather that they both have an equal chance of being selected. This is because relative to one another, they have the same weight, with each of their respective weights making up 50% of the total weight of the group (which also gives them each a 50% chance of spawning). Similarly, if one element in a group has a weight of 0.5, and the another has a weight of 0.05, it does not mean they have a respective chance of 50% and 5% of being selected. That would only equate to 55%, meaning 45% of the time, nothing would be selected (which doesn't make much sense). Instead, the total weight pool of all elements in the group is 0.55. The element with the weight of 0.5 makes up roughly 90% of the total weight pool, which means the element with a weight of 0.05 has only about a 10% chance of spawning relative to the first. Simulation Limitations Currently, the simulation has a few limitations in its functionality. Here are the most noticeable: Long queues that push into walls perpendicular to the average direction of the queue don't always wrap correctly Poor performance when using the ALWAYS local avoidance type. This is unavoidable without huge changes to the underlying agent logic to convert it to an ECS-based architecture. Simulation may be inaccurate in pathfinding and agent processing at high simulation time scales. If you notice poor framerate while simulating, and accuracy is also an issue, try turning down the time scale for improvements Various limitations surrounding recording and playback. See Playback and Saving/Loading for more details.","title":"About"},{"location":"#about","text":"This program was created as an internal tool to help simulate the amount of congestion in a public area, and analyze how the placement of queues and waypoints can affect the throughput of agents over a duration of time.","title":"About"},{"location":"#advanced-user-settings","text":"Advanced User Settings are settings that should not be changed or reconfigured unless the user knows exactly what they are doing. All Advanced User Settings are specifically labeled on all settings defined in these docs. These settings are already configured, and the average user should NEVER need to change them. Changing Advanced User Settings can easily break the entire simulation if not careful. Not all configurable parts of this program are listed in this documentation. It is restricted to only the most essential pieces that the average user will be required to understand and configure.","title":"Advanced User Settings"},{"location":"#weights","text":"Many elements of this program use the concept of weights. This is a way to assign a certain basis that an element will be selected randomly from a group of other elements. Whenever a weight is used in relation to something in this program, it does NOT represent a percent chance that element will be selected. Rather, it represents the weight relative to the weights of the other elements in the group that it will be selected. For example, if two elements in a list have a weight of 1, this does not mean they both have a 100% chance of being selected, but rather that they both have an equal chance of being selected. This is because relative to one another, they have the same weight, with each of their respective weights making up 50% of the total weight of the group (which also gives them each a 50% chance of spawning). Similarly, if one element in a group has a weight of 0.5, and the another has a weight of 0.05, it does not mean they have a respective chance of 50% and 5% of being selected. That would only equate to 55%, meaning 45% of the time, nothing would be selected (which doesn't make much sense). Instead, the total weight pool of all elements in the group is 0.55. The element with the weight of 0.5 makes up roughly 90% of the total weight pool, which means the element with a weight of 0.05 has only about a 10% chance of spawning relative to the first.","title":"Weights"},{"location":"#simulation-limitations","text":"Currently, the simulation has a few limitations in its functionality. Here are the most noticeable: Long queues that push into walls perpendicular to the average direction of the queue don't always wrap correctly Poor performance when using the ALWAYS local avoidance type. This is unavoidable without huge changes to the underlying agent logic to convert it to an ECS-based architecture. Simulation may be inaccurate in pathfinding and agent processing at high simulation time scales. If you notice poor framerate while simulating, and accuracy is also an issue, try turning down the time scale for improvements Various limitations surrounding recording and playback. See Playback and Saving/Loading for more details.","title":"Simulation Limitations"},{"location":"quick-start/","text":"Simulation Quick Start This quick start guide will teach you how to create a new simulation scene, configure new and existing simulation scenes, and run simulations! Creating a New Simulation Scene Setting up the Environment of a New or Existing Scene Additional useful information: Setting up Waypoints Configuring Agent Spawn Rates Pathfinding and Queue Formation Influencing Time Control Metrics Saving and Loading Recordings of Simulations Playback and Alerts Tips Creating a New Simulation Scene To create a new simulation scene, simply duplicate the example scene and reconfigure the new scene with the desired layout and settings. Duplicating the Example Scene Find the example simulation scene. It is located in the Project Panel, under the folder named \"Scenes\". The example scene is named \"Main\". Single click on the example scene so that it is selected, and then press Ctrl + d to duplicate the scene. A new scene icon should appear in that folder. Rename the new scene to whatever is desired. To rename a file or folder, right click on it and select \"Rename\", or press F2 while it is selected. To open the new scene, simply double click on it. To verify which scene is currently active, look at the top of the hierarchy. The current scene name will be displayed at the top of the hierarchy next to the Unity icon. Once the new simulation scene has been created and loaded as the current scene, the environment can be configured. Note: All simulations must be contained within the same Unity project, with each simulation existing in its own independent scene. To create a simulation using these tools in a brand new Unity project would require a far more detailed set up and is not within the scope of this documentation. Configuring the New Scene When configuring the environment, the following GameObjects are allowed to be duplicated, moved, deleted, or otherwise changed: Blocking volumes Waypoints Any object that is a part of the environment (props, walls, etc.) PenaltyArea s Any GameObject that is not listed above should never be moved, duplicated, or deleted. Doing so can cause a variety of issues for that simulation scene. For detailed instructions on how to configure the environment, see Setting up the Environment . Setting up the Environment To correctly set up the simulation environment, there are a few main steps to follow. Import Objects Place Objects and Add Colliders Mark Objects as Static Rebake Nav Mesh Configure Pathfinding Grid Set Up Simulation Camera Note: Steps 3 and 4 must be preformed every time anything about the environment changes. If an object is added, moved, or removed, ensure all objects are still static, and rebake the Nav Mesh. Importing Objects into the Unity Project To import objects into the Unity project, create a folder in the Project Panel for your assets. The folder \"Raw Imports\" contains the currently imported assets. Right-click in the desired folder and select the \"Import New Asset\" menu option. Alternatively, dragging and dropping the model's file into the Project Panel also works to import it into the project. Placing GameObjects and Adding Colliders Once the object is imported into the project, drag and drop it into the scene. Position it, scale it, and rotate it to the desired values. Once the object has been positioned, ensure that the object has a Collider component attached to it. This can be done by selecting the object, and pressing the \"Add Component\" button near the bottom of the Inspector. Objects can contain SphereCollider s, BoxCollider s, or MeshCollider s. SphereCollider s and BoxCollider s are recommended due to their simplicity and efficiency, so prefer these two colliders when possible. If the object in question has a more complex shape, a MeshCollider can be used. Read the Unity documentation for MeshCollider components to see details on how to configure the component. After the desired collider has been added to the object, modify the collider to ensure it surrounds the entirety of the object. These collision bounds will be used in following steps to ensure the object is correctly blocked out on the Nav Mesh. Marking GameObjects as Static After placing your GameObjects wherever you wish to create your environment, the only requirement is that every object in the environment that should block agents from passing through it (walls, queues, pillars, food lockers, tables, chairs etc.) MUST be marked as static. To mark any GameObject as static, ensure the Static checkbox is checked. The Static checkbox is located in the top right corner of the inspector for the current GameObject selected, to the right of the GameObject's name textbox. If the GameObject has children GameObjects, ensure those are marked as static as well. Any GameObject that does not directly block agents (such as PenaltyArea s ) should NOT be marked as static, as this should only be done for solid, blocking objects. Configuring GameObjects for the Nav Mesh After all GameObjects have been given a collider and marked as static, the next step is to ensure all objects that should block agents contain a NavMeshModifier component. This component is used to tell the Nav Mesh what areas are walkable and what areas are not. If set up correctly, the object will appear to cut out a hole in the blue walkable area of the Nav Mesh (see Rebaking the Nav Mesh ). To add a NavMeshModifier component to a GameObject, select the GameObject and press the \"Add Component\" button near the bottom of the Inspector. Search for \"Nav Mesh Modifier\" and select the component. The default values for this component do not need to be changed. Rebaking the Nav Mesh To rebake the Nav Mesh, first ensure all GameObjects in the scene that should block agents are marked as static , have colliders on them , and have a NavMeshModifier component attached to them. Next, find the GameObject that acts as the floor for the environment. If you're using the duplicated example scene, this object is just called \"Floor\". Make sure this Floor object has both a NavMeshSurface and NavMeshModifier component attached to it. If not, add both components to the Floor object. The default values for these components (whether you had to add them manually or not) are fine as they are and do not need to be changed. Click the Bake button at the bottom of the NavMeshSurface component. If done correctly, all walkable areas should be highlighted in blue, and all non-walkable areas should not be highlighted at all. Configure Pathfinding Grid Once the Nav Mesh has been rebaked, the Pathfinding Grid needs to be reconfigured. The Pathfinding Grid allows the agents to move from point to point and works with the Nav Mesh to provide accurate pathfinding. First, locate the GameObject with the name \"A*\", which can be found in the hierarchy. There should only be a single component attached to it, called Pathfinder . If a grid is not seen overlaid across your simulation environment in the Unity Scene window, scroll to the bottom of the \"A*\" GameObject and ensure the option Show Graphs is set to true . Once the grid has been located, position it near the center of the simulation environment. After it is positioned, increase or decrease the grid size so that the entire simulation environment is covered. This can be done by changing the Width (nodes) and Depth (nodes) settings on the Pathfinder component. The grid should encompass the entire simulation environment, but it should not be any larger than necessary. Massively large grids are slower and less accurate than smaller ones. There are other settings on the Pathfinder that affect how the agents' pathfinding works, but these are all considered ADVANCED USER SETTINGS and should only be changed if the user is absolutely certain of what they are doing. Setting up the Simulation Camera Whenever a new environment for a simulation is created, the camera that views the simulation environment must be configured so all parts of the simulation are viewable. See CameraController for details. Setting up Waypoints Due to how the simulation works, waypoints are grouped into two categories: Starting/Ending Waypoints Main Waypoints Setting up Starting and Ending Waypoints To set up the starting and ending waypoints for the simulation, use the WaypointPlanner component . Setting up Main Waypoints To set up all main waypoints (any waypoint that is not a starting or ending waypoint), see Setting up Waypoints . Configuring Agent Spawn Rates To configure the rate and frequency in which agents spawn over the duration of the simulation, use the AgentSpawnConfig component . Pathfinding and Queue Formation Influencing One way to influence how agents pathfind from waypoint to waypoint and how queues are formed while agents wait for waypoints is with the PenaltyArea object . Time Control For more details about how to change the time scale of a simulation, see Time Control . Metrics To view and analyze metrics relating to the global state of the simulation, see Global Metrics . To view metrics specific to a single agent or waypoint, see Specific Metrics . To view visualizations of connections between waypoints and connections between a waypoint and it's sublocations, see Visualizations . Saving/Loading Simulation Recordings To save and load simulation recordings, see Saving/Loading . Playback and Alerts To view simulation playback history and alert flags, see Playback . To set up alerts for specific waypoints, see Waypoint Alerts . Tips Never change anything while the simulation is running, as this can cause errors. Also, any changes made while the simulation is running are reverted to their origin values when the simulation is stopped.","title":"Quick Start"},{"location":"quick-start/#simulation-quick-start","text":"This quick start guide will teach you how to create a new simulation scene, configure new and existing simulation scenes, and run simulations! Creating a New Simulation Scene Setting up the Environment of a New or Existing Scene Additional useful information: Setting up Waypoints Configuring Agent Spawn Rates Pathfinding and Queue Formation Influencing Time Control Metrics Saving and Loading Recordings of Simulations Playback and Alerts Tips","title":"Simulation Quick Start"},{"location":"quick-start/#creating-a-new-simulation-scene","text":"To create a new simulation scene, simply duplicate the example scene and reconfigure the new scene with the desired layout and settings.","title":"Creating a New Simulation Scene"},{"location":"quick-start/#duplicating-the-example-scene","text":"Find the example simulation scene. It is located in the Project Panel, under the folder named \"Scenes\". The example scene is named \"Main\". Single click on the example scene so that it is selected, and then press Ctrl + d to duplicate the scene. A new scene icon should appear in that folder. Rename the new scene to whatever is desired. To rename a file or folder, right click on it and select \"Rename\", or press F2 while it is selected. To open the new scene, simply double click on it. To verify which scene is currently active, look at the top of the hierarchy. The current scene name will be displayed at the top of the hierarchy next to the Unity icon. Once the new simulation scene has been created and loaded as the current scene, the environment can be configured. Note: All simulations must be contained within the same Unity project, with each simulation existing in its own independent scene. To create a simulation using these tools in a brand new Unity project would require a far more detailed set up and is not within the scope of this documentation.","title":"Duplicating the Example Scene"},{"location":"quick-start/#configuring-the-new-scene","text":"When configuring the environment, the following GameObjects are allowed to be duplicated, moved, deleted, or otherwise changed: Blocking volumes Waypoints Any object that is a part of the environment (props, walls, etc.) PenaltyArea s Any GameObject that is not listed above should never be moved, duplicated, or deleted. Doing so can cause a variety of issues for that simulation scene. For detailed instructions on how to configure the environment, see Setting up the Environment .","title":"Configuring the New Scene"},{"location":"quick-start/#setting-up-the-environment","text":"To correctly set up the simulation environment, there are a few main steps to follow. Import Objects Place Objects and Add Colliders Mark Objects as Static Rebake Nav Mesh Configure Pathfinding Grid Set Up Simulation Camera Note: Steps 3 and 4 must be preformed every time anything about the environment changes. If an object is added, moved, or removed, ensure all objects are still static, and rebake the Nav Mesh.","title":"Setting up the Environment"},{"location":"quick-start/#importing-objects-into-the-unity-project","text":"To import objects into the Unity project, create a folder in the Project Panel for your assets. The folder \"Raw Imports\" contains the currently imported assets. Right-click in the desired folder and select the \"Import New Asset\" menu option. Alternatively, dragging and dropping the model's file into the Project Panel also works to import it into the project.","title":"Importing Objects into the Unity Project"},{"location":"quick-start/#placing-gameobjects-and-adding-colliders","text":"Once the object is imported into the project, drag and drop it into the scene. Position it, scale it, and rotate it to the desired values. Once the object has been positioned, ensure that the object has a Collider component attached to it. This can be done by selecting the object, and pressing the \"Add Component\" button near the bottom of the Inspector. Objects can contain SphereCollider s, BoxCollider s, or MeshCollider s. SphereCollider s and BoxCollider s are recommended due to their simplicity and efficiency, so prefer these two colliders when possible. If the object in question has a more complex shape, a MeshCollider can be used. Read the Unity documentation for MeshCollider components to see details on how to configure the component. After the desired collider has been added to the object, modify the collider to ensure it surrounds the entirety of the object. These collision bounds will be used in following steps to ensure the object is correctly blocked out on the Nav Mesh.","title":"Placing GameObjects and Adding Colliders"},{"location":"quick-start/#marking-gameobjects-as-static","text":"After placing your GameObjects wherever you wish to create your environment, the only requirement is that every object in the environment that should block agents from passing through it (walls, queues, pillars, food lockers, tables, chairs etc.) MUST be marked as static. To mark any GameObject as static, ensure the Static checkbox is checked. The Static checkbox is located in the top right corner of the inspector for the current GameObject selected, to the right of the GameObject's name textbox. If the GameObject has children GameObjects, ensure those are marked as static as well. Any GameObject that does not directly block agents (such as PenaltyArea s ) should NOT be marked as static, as this should only be done for solid, blocking objects.","title":"Marking GameObjects as Static"},{"location":"quick-start/#configuring-gameobjects-for-the-nav-mesh","text":"After all GameObjects have been given a collider and marked as static, the next step is to ensure all objects that should block agents contain a NavMeshModifier component. This component is used to tell the Nav Mesh what areas are walkable and what areas are not. If set up correctly, the object will appear to cut out a hole in the blue walkable area of the Nav Mesh (see Rebaking the Nav Mesh ). To add a NavMeshModifier component to a GameObject, select the GameObject and press the \"Add Component\" button near the bottom of the Inspector. Search for \"Nav Mesh Modifier\" and select the component. The default values for this component do not need to be changed.","title":"Configuring GameObjects for the Nav Mesh"},{"location":"quick-start/#rebaking-the-nav-mesh","text":"To rebake the Nav Mesh, first ensure all GameObjects in the scene that should block agents are marked as static , have colliders on them , and have a NavMeshModifier component attached to them. Next, find the GameObject that acts as the floor for the environment. If you're using the duplicated example scene, this object is just called \"Floor\". Make sure this Floor object has both a NavMeshSurface and NavMeshModifier component attached to it. If not, add both components to the Floor object. The default values for these components (whether you had to add them manually or not) are fine as they are and do not need to be changed. Click the Bake button at the bottom of the NavMeshSurface component. If done correctly, all walkable areas should be highlighted in blue, and all non-walkable areas should not be highlighted at all.","title":"Rebaking the Nav Mesh"},{"location":"quick-start/#configure-pathfinding-grid","text":"Once the Nav Mesh has been rebaked, the Pathfinding Grid needs to be reconfigured. The Pathfinding Grid allows the agents to move from point to point and works with the Nav Mesh to provide accurate pathfinding. First, locate the GameObject with the name \"A*\", which can be found in the hierarchy. There should only be a single component attached to it, called Pathfinder . If a grid is not seen overlaid across your simulation environment in the Unity Scene window, scroll to the bottom of the \"A*\" GameObject and ensure the option Show Graphs is set to true . Once the grid has been located, position it near the center of the simulation environment. After it is positioned, increase or decrease the grid size so that the entire simulation environment is covered. This can be done by changing the Width (nodes) and Depth (nodes) settings on the Pathfinder component. The grid should encompass the entire simulation environment, but it should not be any larger than necessary. Massively large grids are slower and less accurate than smaller ones. There are other settings on the Pathfinder that affect how the agents' pathfinding works, but these are all considered ADVANCED USER SETTINGS and should only be changed if the user is absolutely certain of what they are doing.","title":"Configure Pathfinding Grid"},{"location":"quick-start/#setting-up-the-simulation-camera","text":"Whenever a new environment for a simulation is created, the camera that views the simulation environment must be configured so all parts of the simulation are viewable. See CameraController for details.","title":"Setting up the Simulation Camera"},{"location":"quick-start/#setting-up-waypoints","text":"Due to how the simulation works, waypoints are grouped into two categories: Starting/Ending Waypoints Main Waypoints","title":"Setting up Waypoints"},{"location":"quick-start/#setting-up-starting-and-ending-waypoints","text":"To set up the starting and ending waypoints for the simulation, use the WaypointPlanner component .","title":"Setting up Starting and Ending Waypoints"},{"location":"quick-start/#setting-up-main-waypoints","text":"To set up all main waypoints (any waypoint that is not a starting or ending waypoint), see Setting up Waypoints .","title":"Setting up Main Waypoints"},{"location":"quick-start/#configuring-agent-spawn-rates","text":"To configure the rate and frequency in which agents spawn over the duration of the simulation, use the AgentSpawnConfig component .","title":"Configuring Agent Spawn Rates"},{"location":"quick-start/#pathfinding-and-queue-formation-influencing","text":"One way to influence how agents pathfind from waypoint to waypoint and how queues are formed while agents wait for waypoints is with the PenaltyArea object .","title":"Pathfinding and Queue Formation Influencing"},{"location":"quick-start/#time-control","text":"For more details about how to change the time scale of a simulation, see Time Control .","title":"Time Control"},{"location":"quick-start/#metrics","text":"To view and analyze metrics relating to the global state of the simulation, see Global Metrics . To view metrics specific to a single agent or waypoint, see Specific Metrics . To view visualizations of connections between waypoints and connections between a waypoint and it's sublocations, see Visualizations .","title":"Metrics"},{"location":"quick-start/#savingloading-simulation-recordings","text":"To save and load simulation recordings, see Saving/Loading .","title":"Saving/Loading Simulation Recordings"},{"location":"quick-start/#playback-and-alerts","text":"To view simulation playback history and alert flags, see Playback . To set up alerts for specific waypoints, see Waypoint Alerts .","title":"Playback and Alerts"},{"location":"quick-start/#tips","text":"Never change anything while the simulation is running, as this can cause errors. Also, any changes made while the simulation is running are reverted to their origin values when the simulation is stopped.","title":"Tips"},{"location":"config/agents/agent-manager/","text":"AgentManager How To Locate The AgentManager component is located on the GameObject with the name \"AgentManager\", which can be found in the hierarchy. Settings Setting Description Agent ADVANCED USER SETTING . Reference to agent to use in simulation. Spawn Pos Reference to the position where agents will spawn when they first enter the simulation. Planner ADVANCED USER SETTING . Reference to the WaypointPlanner agents use to create their Plan Progress Display ADVANCED USER SETTING . Reference to the simulation progress display Agent Settings ADVANCED USER SETTING . Reference to the AgentSettings ScriptableObject. Path Update Rate Number of times per second that each agent will recalculate its path. Higher values result in more accurate paths, but are more expensive to simulate. Min Max Speed Min and max movement speed of an agent. Whenever a new agent is added to the simulation, it will have a speed between these two values. Waypoint Dist Threshold Min distance away from a target an agent must be to consider having \"reached\" their target. Min Max Queue Spacing Min and max amount of spacing an agent in line will give between itself and the agent in front of it. Line Look Ahead Number of agents ahead of itself an agent will look in a line when trying to position itself at the back of the line. Larger values result in straighter lines, but are more expensive. Local Avoidance Type Type of local avoidance agents will use while simulating. NEVER - Agents never use local avoidance IN_LINE_ONLY - Agents only avoid other agents that are currently in a line or at a waypoint ALWAYS - Agents always use local avoidance, whether they are in lines or walking from waypoint to waypoint. This type is very expensive to simulate and not recommended for simulations with a time scale of greater than 2.5x. Local Avoidance Threshold Only applicable if Local Avoidance Type is not NEVER . Number of additional nodes another agent would need to walk before preferring to walk through the obstacle agent. Min Dist Local Avoidance Update Only applicable if Local Avoidance Type is not NEVER . Min distance an agent must move before it updates the nodes affected by its own local avoidance. Enable Manual Agent Spawning Toggles whether or not agents can be manually spawned in by the user. Manual Agent Spawn Key Only applicable if Enable Manual Agent Spawning is true . Key to press to manually spawn an agent into the simulation.","title":"AgentManager"},{"location":"config/agents/agent-manager/#agentmanager","text":"","title":"AgentManager"},{"location":"config/agents/agent-manager/#how-to-locate","text":"The AgentManager component is located on the GameObject with the name \"AgentManager\", which can be found in the hierarchy.","title":"How To Locate"},{"location":"config/agents/agent-manager/#settings","text":"Setting Description Agent ADVANCED USER SETTING . Reference to agent to use in simulation. Spawn Pos Reference to the position where agents will spawn when they first enter the simulation. Planner ADVANCED USER SETTING . Reference to the WaypointPlanner agents use to create their Plan Progress Display ADVANCED USER SETTING . Reference to the simulation progress display Agent Settings ADVANCED USER SETTING . Reference to the AgentSettings ScriptableObject. Path Update Rate Number of times per second that each agent will recalculate its path. Higher values result in more accurate paths, but are more expensive to simulate. Min Max Speed Min and max movement speed of an agent. Whenever a new agent is added to the simulation, it will have a speed between these two values. Waypoint Dist Threshold Min distance away from a target an agent must be to consider having \"reached\" their target. Min Max Queue Spacing Min and max amount of spacing an agent in line will give between itself and the agent in front of it. Line Look Ahead Number of agents ahead of itself an agent will look in a line when trying to position itself at the back of the line. Larger values result in straighter lines, but are more expensive. Local Avoidance Type Type of local avoidance agents will use while simulating. NEVER - Agents never use local avoidance IN_LINE_ONLY - Agents only avoid other agents that are currently in a line or at a waypoint ALWAYS - Agents always use local avoidance, whether they are in lines or walking from waypoint to waypoint. This type is very expensive to simulate and not recommended for simulations with a time scale of greater than 2.5x. Local Avoidance Threshold Only applicable if Local Avoidance Type is not NEVER . Number of additional nodes another agent would need to walk before preferring to walk through the obstacle agent. Min Dist Local Avoidance Update Only applicable if Local Avoidance Type is not NEVER . Min distance an agent must move before it updates the nodes affected by its own local avoidance. Enable Manual Agent Spawning Toggles whether or not agents can be manually spawned in by the user. Manual Agent Spawn Key Only applicable if Enable Manual Agent Spawning is true . Key to press to manually spawn an agent into the simulation.","title":"Settings"},{"location":"config/simulation/agent-spawn-config/","text":"AgentSpawnConfig How to Locate The AgentSpawnConfig component is located on the GameObject named \"SimulationManager\", which can be found in the hierarchy. Settings Setting Description Constant Spawn Rate Toggles whether or not agents should spawn at a constant rate over the duration of the simulation. If true , only a single AgentSpawnBlock can be configured, with an enforced Agent Spawn Rate Smoothness of 1. Agent Spawn Blocks Only applicable if Constant Spawn Rate is false . List of references to AgentSpawnBlocks . Total Agents To Process Only applicable if Constant Spawn Rate is false . A sum of all the agents that will be spawned across all spawn blocks. Used for debugging only, and is not meant to be modified directly by the user. AgentSpawnBlock AgentSpawnBlock s define how agents will spawn over a block of time. Blocks are automatically ordered by their Start Time , and are processed in order from earliest to latest. In other words, the order of the blocks in the list does not matter, as the list is self-organizing. AgentSpawnBlock Settings Setting Description Start Time Start time of the simulation spawn block. End Time End time of the simulation spawn block. Num Agents Total agents that will spawn between Start Time and End Time of the spawn block. Agent Color Color of agents that will spawn during this spawn block. Agent Spawn Rate Smoothness How \"smooth\" the agents will spawn throughout the duration of the spawn block. See Spawn Rate Smoothness for details. Spawn Rate Smoothness The value of Agent Spawn Rate Smoothness for an individual AgentSpawnBlock represents the minimum percentage of time within a spawn block that all agents could possible spawn. For example, let's say we have a spawn block with a start time of 10am, a duration of 1 hour, and 60 agents that should spawn within this spawn block. Internally, when a spawn block is processed, the variable maxTimeBetweenAgents is created to represent the max time that can pass before another agent must spawn in order to ensure all agents are spawned within the duration of a spawn block. With 60 agents over a 1 hour spawn block, that means that an agent must spawn, at most, every 1 minute. Spawn rate smoothness simply represents a percentage of the maxTimeBetweenAgents for the lower bound of the time range for when an agent must be spawned in. This range is then selected from at random. If spawn rate smoothness was 1, then the lower bound for an agent's spawn rate is 100% of maxTimeBetweenAgents , which gives us a random time between 1 minute and 1 minute (which is of course just 1 minute always, as you cannot select a random number between just one number). If the spawn rate smoothness was 0.1, then the lower bound for an agent's spawn rate is 10% of maxTimeBetweenAgents , which gives us a random time between 6 seconds and 1 minute. This means that with a smoothness of 0.1, and 60 agents spawning over 1 hour, all 60 agents will spawn between 6 minutes at the lower bound, and 1 hour at the upper bound. Randomness will determine how close to either of these bounds the simulation actually comes. In summary, the lower spawn rate smoothness, the more \"clumped together\" agents may spawn. The higher it is, the more smooth and consistently agents will spawn across the duration of a spawn block.","title":"AgentSpawnConfig"},{"location":"config/simulation/agent-spawn-config/#agentspawnconfig","text":"","title":"AgentSpawnConfig"},{"location":"config/simulation/agent-spawn-config/#how-to-locate","text":"The AgentSpawnConfig component is located on the GameObject named \"SimulationManager\", which can be found in the hierarchy.","title":"How to Locate"},{"location":"config/simulation/agent-spawn-config/#settings","text":"Setting Description Constant Spawn Rate Toggles whether or not agents should spawn at a constant rate over the duration of the simulation. If true , only a single AgentSpawnBlock can be configured, with an enforced Agent Spawn Rate Smoothness of 1. Agent Spawn Blocks Only applicable if Constant Spawn Rate is false . List of references to AgentSpawnBlocks . Total Agents To Process Only applicable if Constant Spawn Rate is false . A sum of all the agents that will be spawned across all spawn blocks. Used for debugging only, and is not meant to be modified directly by the user.","title":"Settings"},{"location":"config/simulation/agent-spawn-config/#agentspawnblock","text":"AgentSpawnBlock s define how agents will spawn over a block of time. Blocks are automatically ordered by their Start Time , and are processed in order from earliest to latest. In other words, the order of the blocks in the list does not matter, as the list is self-organizing.","title":"AgentSpawnBlock"},{"location":"config/simulation/agent-spawn-config/#agentspawnblock-settings","text":"Setting Description Start Time Start time of the simulation spawn block. End Time End time of the simulation spawn block. Num Agents Total agents that will spawn between Start Time and End Time of the spawn block. Agent Color Color of agents that will spawn during this spawn block. Agent Spawn Rate Smoothness How \"smooth\" the agents will spawn throughout the duration of the spawn block. See Spawn Rate Smoothness for details.","title":"AgentSpawnBlock Settings"},{"location":"config/simulation/agent-spawn-config/#spawn-rate-smoothness","text":"The value of Agent Spawn Rate Smoothness for an individual AgentSpawnBlock represents the minimum percentage of time within a spawn block that all agents could possible spawn. For example, let's say we have a spawn block with a start time of 10am, a duration of 1 hour, and 60 agents that should spawn within this spawn block. Internally, when a spawn block is processed, the variable maxTimeBetweenAgents is created to represent the max time that can pass before another agent must spawn in order to ensure all agents are spawned within the duration of a spawn block. With 60 agents over a 1 hour spawn block, that means that an agent must spawn, at most, every 1 minute. Spawn rate smoothness simply represents a percentage of the maxTimeBetweenAgents for the lower bound of the time range for when an agent must be spawned in. This range is then selected from at random. If spawn rate smoothness was 1, then the lower bound for an agent's spawn rate is 100% of maxTimeBetweenAgents , which gives us a random time between 1 minute and 1 minute (which is of course just 1 minute always, as you cannot select a random number between just one number). If the spawn rate smoothness was 0.1, then the lower bound for an agent's spawn rate is 10% of maxTimeBetweenAgents , which gives us a random time between 6 seconds and 1 minute. This means that with a smoothness of 0.1, and 60 agents spawning over 1 hour, all 60 agents will spawn between 6 minutes at the lower bound, and 1 hour at the upper bound. Randomness will determine how close to either of these bounds the simulation actually comes. In summary, the lower spawn rate smoothness, the more \"clumped together\" agents may spawn. The higher it is, the more smooth and consistently agents will spawn across the duration of a spawn block.","title":"Spawn Rate Smoothness"},{"location":"config/simulation/camera-controller/","text":"CameraController How to Locate The CameraController component is located on the GameObject named \"Main Camera\", which can be found in the hierarchy. Settings Setting Description Rotation Speed Speed that the camera rotates. Zoom Speed Speed that the camera zooms in and out. Move Speed Speed that the camera moves, whether via keys or the mouse cursor near the edge of the screen. Min Boundary Min coordinates of the camera boundary. When adjusting this, it is recommend to have Visualize Boundaries set to true in order to more easily define accurate camera boundaries. Max Boundary Max coordinates of the camera boundary. When adjusting this, it is recommend to have Visualize Boundaries set to true in order to more easily define accurate camera boundaries. Screen Edge Ratio Percentage from the edge of the screen that is considered the screen's edge. For example, 0.05 would mean the screen's edge is anywhere that is 5% the width of the physical monitor screen. Cursor On Edge Threshold Time in seconds that the mouse cursor must reside within the screen's edge for the camera to move. Visualize Boundaries Toggles whether or not the camera's boundaries should be visualized. Visualization Volume Color Only applicable if Visualize Boundaries is true . Color of the visualization of the camera's boundaries. How to Control the Camera Moving Input Effect on Camera W Move forward S Move backward A Move left D Move right The camera can also be moved by moving the mouse cursor towards the edge of the screen that corresponds with the desired direction of movement. Rotating Input Effect on Camera Q Rotate left E Rotate right Zooming Input Effect on Camera Mousewheel Scroll Up Zoom in Mousewheel Scroll Down Zoom out How to Set Up Camera Boundaries Whenever a simulation environment is created or modified, the CameraController camera boundaries must be updated to ensure the camera can view every part of the simulation environment. To do this, simply toggle Visualize Boundaries to true on the CameraController to see the current boundaries. Then, change the min and max boundary values on the x, y, and z until the boundaries match the desired volume. The GameObject the CameraController is attached to (which has the name \"Main Camera\") can then be moved to its desired starting location.","title":"CameraController"},{"location":"config/simulation/camera-controller/#cameracontroller","text":"","title":"CameraController"},{"location":"config/simulation/camera-controller/#how-to-locate","text":"The CameraController component is located on the GameObject named \"Main Camera\", which can be found in the hierarchy.","title":"How to Locate"},{"location":"config/simulation/camera-controller/#settings","text":"Setting Description Rotation Speed Speed that the camera rotates. Zoom Speed Speed that the camera zooms in and out. Move Speed Speed that the camera moves, whether via keys or the mouse cursor near the edge of the screen. Min Boundary Min coordinates of the camera boundary. When adjusting this, it is recommend to have Visualize Boundaries set to true in order to more easily define accurate camera boundaries. Max Boundary Max coordinates of the camera boundary. When adjusting this, it is recommend to have Visualize Boundaries set to true in order to more easily define accurate camera boundaries. Screen Edge Ratio Percentage from the edge of the screen that is considered the screen's edge. For example, 0.05 would mean the screen's edge is anywhere that is 5% the width of the physical monitor screen. Cursor On Edge Threshold Time in seconds that the mouse cursor must reside within the screen's edge for the camera to move. Visualize Boundaries Toggles whether or not the camera's boundaries should be visualized. Visualization Volume Color Only applicable if Visualize Boundaries is true . Color of the visualization of the camera's boundaries.","title":"Settings"},{"location":"config/simulation/camera-controller/#how-to-control-the-camera","text":"","title":"How to Control the Camera"},{"location":"config/simulation/camera-controller/#moving","text":"Input Effect on Camera W Move forward S Move backward A Move left D Move right The camera can also be moved by moving the mouse cursor towards the edge of the screen that corresponds with the desired direction of movement.","title":"Moving"},{"location":"config/simulation/camera-controller/#rotating","text":"Input Effect on Camera Q Rotate left E Rotate right","title":"Rotating"},{"location":"config/simulation/camera-controller/#zooming","text":"Input Effect on Camera Mousewheel Scroll Up Zoom in Mousewheel Scroll Down Zoom out","title":"Zooming"},{"location":"config/simulation/camera-controller/#how-to-set-up-camera-boundaries","text":"Whenever a simulation environment is created or modified, the CameraController camera boundaries must be updated to ensure the camera can view every part of the simulation environment. To do this, simply toggle Visualize Boundaries to true on the CameraController to see the current boundaries. Then, change the min and max boundary values on the x, y, and z until the boundaries match the desired volume. The GameObject the CameraController is attached to (which has the name \"Main Camera\") can then be moved to its desired starting location.","title":"How to Set Up Camera Boundaries"},{"location":"config/simulation/penalty-area/","text":"PenaltyArea PenaltyArea s are objects that can be used to discourage queue formation and agent pathfinding within a specific area. Any pathfinding nodes that are contained with the bounds of a PenaltyArea are given a penalty upon first starting the simulation. As the simulation runs, the nodes in the affected area will never have a penalty lower than the penalty added by the PenaltyArea . When agents attempt to pathfind from one point to another, they will always choose the cheapest path possible. By adding penalties to certain nodes, we can discourage agents from moving across these nodes, as they are considered more expensive to them. How to Create To create a PenaltyArea , simply create a new GameObject with a BoxCollider on it, and add the PenaltyArea component to it. For an even easier way, simply duplicate an existing PenaltyArea (which can be found in the hierarchy as GameObjects containing the name \"PenaltyArea\") and move it to your desired location. PenaltyArea s can also be scaled via the scale vector of their Transform component. Tips Always ensure the bounds of the PenaltyArea 's collider is hitting the ground, so the penalties can correctly be added to the pathfinding nodes The more red the nodes appear on the pathfinding grid, the more penalty they have. Node colors are viewable after the simulation is started Use the Avoidance Strength slider on the PenaltyArea component to control how much of a penalty is applied to an area","title":"PenaltyArea"},{"location":"config/simulation/penalty-area/#penaltyarea","text":"PenaltyArea s are objects that can be used to discourage queue formation and agent pathfinding within a specific area. Any pathfinding nodes that are contained with the bounds of a PenaltyArea are given a penalty upon first starting the simulation. As the simulation runs, the nodes in the affected area will never have a penalty lower than the penalty added by the PenaltyArea . When agents attempt to pathfind from one point to another, they will always choose the cheapest path possible. By adding penalties to certain nodes, we can discourage agents from moving across these nodes, as they are considered more expensive to them.","title":"PenaltyArea"},{"location":"config/simulation/penalty-area/#how-to-create","text":"To create a PenaltyArea , simply create a new GameObject with a BoxCollider on it, and add the PenaltyArea component to it. For an even easier way, simply duplicate an existing PenaltyArea (which can be found in the hierarchy as GameObjects containing the name \"PenaltyArea\") and move it to your desired location. PenaltyArea s can also be scaled via the scale vector of their Transform component.","title":"How to Create"},{"location":"config/simulation/penalty-area/#tips","text":"Always ensure the bounds of the PenaltyArea 's collider is hitting the ground, so the penalties can correctly be added to the pathfinding nodes The more red the nodes appear on the pathfinding grid, the more penalty they have. Node colors are viewable after the simulation is started Use the Avoidance Strength slider on the PenaltyArea component to control how much of a penalty is applied to an area","title":"Tips"},{"location":"config/simulation/time-control/","text":"Time Control The time scale of a simulation can be modified while the simulation is running in order to speed up or slow down agent processing. The time scale of a simulation is currently limited from 1x to 10x real-time. How to Change the Time Scale To change the time scale, first make sure the simulation is running. Then locate the Time Control Panel in the upper left corner of the simulation. Pressing the double forward arrows icon will increase the simulation time scale by 1.5x, up to a max of 10x real-time. Pressing the double backward arrows icon will decrease the simulation time scale by 1.5x, down to a min of 1x real-time. Pressing the play button icon will set the time scale to 1x (real-time). Pressing the pause button icon will set the time scale to 0x, which pauses the simulation. To resume the simulation, simply press the play button. Viewing Time Scale Effects The effects of changing the time scale are obvious, as agents will process, wait, and move at a rate equal to the time scale. The current time of the simulation, which is right above the time control buttons on the Time Control Panel, also shows the speed in which time is progressing.","title":"Time Control"},{"location":"config/simulation/time-control/#time-control","text":"The time scale of a simulation can be modified while the simulation is running in order to speed up or slow down agent processing. The time scale of a simulation is currently limited from 1x to 10x real-time.","title":"Time Control"},{"location":"config/simulation/time-control/#how-to-change-the-time-scale","text":"To change the time scale, first make sure the simulation is running. Then locate the Time Control Panel in the upper left corner of the simulation. Pressing the double forward arrows icon will increase the simulation time scale by 1.5x, up to a max of 10x real-time. Pressing the double backward arrows icon will decrease the simulation time scale by 1.5x, down to a min of 1x real-time. Pressing the play button icon will set the time scale to 1x (real-time). Pressing the pause button icon will set the time scale to 0x, which pauses the simulation. To resume the simulation, simply press the play button.","title":"How to Change the Time Scale"},{"location":"config/simulation/time-control/#viewing-time-scale-effects","text":"The effects of changing the time scale are obvious, as agents will process, wait, and move at a rate equal to the time scale. The current time of the simulation, which is right above the time control buttons on the Time Control Panel, also shows the speed in which time is progressing.","title":"Viewing Time Scale Effects"},{"location":"config/simulation/waypoint-planner/","text":"WaypointPlanner How to Locate The WaypointPlanner component is located on the GameObject with the name \"AgentManager\", which can be found in the hierarchy. Settings Setting Description Ending Waypoint Reference to the last waypoint in the simulation (such as the exit). Once an agent reaches this final waypoint, they are removed from the simulation. Starting Waypoints List of references to possible starting waypoints. When an agent is first added to the simulation, they will choose one of these waypoints at random to start their plan. Waypoint Metrics Display ADVANCED USER SETTING . Reference to metrics display used for waypoints.","title":"WaypointPlanner"},{"location":"config/simulation/waypoint-planner/#waypointplanner","text":"","title":"WaypointPlanner"},{"location":"config/simulation/waypoint-planner/#how-to-locate","text":"The WaypointPlanner component is located on the GameObject with the name \"AgentManager\", which can be found in the hierarchy.","title":"How to Locate"},{"location":"config/simulation/waypoint-planner/#settings","text":"Setting Description Ending Waypoint Reference to the last waypoint in the simulation (such as the exit). Once an agent reaches this final waypoint, they are removed from the simulation. Starting Waypoints List of references to possible starting waypoints. When an agent is first added to the simulation, they will choose one of these waypoints at random to start their plan. Waypoint Metrics Display ADVANCED USER SETTING . Reference to metrics display used for waypoints.","title":"Settings"},{"location":"config/waypoints/lerpable-lines/","text":"Lerpable Lines How to Locate The LerpableLine component is located on the same GameObject as any ProgressionPath or RigidWaypointQueue . The LerpableLine is required for both these other components. Settings Setting Description Rotation Offset Degrees an agent will be rotated relative to the movement direction of the line when it enters the line. Can Exit Early Toggles whether or not an agent can exit the line early. For ProgressionPath s - Not applicable. For RigidWaypointQueue s and free-form queues - Allows agents to exit early if they are some number of spots away from the front of the line, and a shared location is available. Max Exit Early Search Only applicable if Can Exit Early is true . Max number of agents that are checked from the front of the line for eligibility to exit early. Nodes List of references to Line Nodes that define the path. Draw Line Toggles whether or not the visual that connections the Line Nodes appears. Line Visualization Color Only applicable if Draw Line is true . Color of the line connection visualization. Line Node Color Only applicable if Draw Line is true . Color of the Line Nodes visualization. Line Node Size Only applicable if Draw Line is true . Size of the Line Nodes visualization. Draw Member Spacing Toggles whether or not a visualization showing the spacing between agents currently in the line appears. Member Spacing Visualization Color Only applicable if Draw Member Spacing is true . Color of the member spacing visualization. Line Nodes A LerpableLine is simply a path defined by a list of points. Each point is represented by a single Transform on a GameObject that is a child of the GameObject containing the LerpableLine component. Each Line Node is named \"LerpableLineNode_???\" with the \"???\" representing the order of the nodes. However, the name is purely for organizational purposes, as the order of the nodes is determined by the order of the nodes in the Nodes list. How to Create and Position Line Nodes To create Line Nodes, simply press the \"Add Path Node\" button at the bottom of the component. This will automatically create, name, and add the new node to the Nodes list. Then, simply move the node to the desired location. Position the node to the desired location. How to Remove Line Nodes Simply select the node you want to remove and delete it. The Nodes list will automatically update. How to Change the Order of Line Nodes The order a agent will progress through a LerpableLine is determined by the order of the nodes in the Nodes list. To change the order, simply drag and drop the nodes in the list to the desired order. This can be done by clicking and dragging three horizontal lines to the left of the node name. Tips Always use the \"Add Path Node\" button to add new nodes. This will ensure that the node is properly named and added to the Nodes list. Creating nodes manually can result in errors if not set up correctly.","title":"LerpableLine"},{"location":"config/waypoints/lerpable-lines/#lerpable-lines","text":"","title":"Lerpable Lines"},{"location":"config/waypoints/lerpable-lines/#how-to-locate","text":"The LerpableLine component is located on the same GameObject as any ProgressionPath or RigidWaypointQueue . The LerpableLine is required for both these other components.","title":"How to Locate"},{"location":"config/waypoints/lerpable-lines/#settings","text":"Setting Description Rotation Offset Degrees an agent will be rotated relative to the movement direction of the line when it enters the line. Can Exit Early Toggles whether or not an agent can exit the line early. For ProgressionPath s - Not applicable. For RigidWaypointQueue s and free-form queues - Allows agents to exit early if they are some number of spots away from the front of the line, and a shared location is available. Max Exit Early Search Only applicable if Can Exit Early is true . Max number of agents that are checked from the front of the line for eligibility to exit early. Nodes List of references to Line Nodes that define the path. Draw Line Toggles whether or not the visual that connections the Line Nodes appears. Line Visualization Color Only applicable if Draw Line is true . Color of the line connection visualization. Line Node Color Only applicable if Draw Line is true . Color of the Line Nodes visualization. Line Node Size Only applicable if Draw Line is true . Size of the Line Nodes visualization. Draw Member Spacing Toggles whether or not a visualization showing the spacing between agents currently in the line appears. Member Spacing Visualization Color Only applicable if Draw Member Spacing is true . Color of the member spacing visualization.","title":"Settings"},{"location":"config/waypoints/lerpable-lines/#line-nodes","text":"A LerpableLine is simply a path defined by a list of points. Each point is represented by a single Transform on a GameObject that is a child of the GameObject containing the LerpableLine component. Each Line Node is named \"LerpableLineNode_???\" with the \"???\" representing the order of the nodes. However, the name is purely for organizational purposes, as the order of the nodes is determined by the order of the nodes in the Nodes list.","title":"Line Nodes"},{"location":"config/waypoints/lerpable-lines/#how-to-create-and-position-line-nodes","text":"To create Line Nodes, simply press the \"Add Path Node\" button at the bottom of the component. This will automatically create, name, and add the new node to the Nodes list. Then, simply move the node to the desired location. Position the node to the desired location.","title":"How to Create and Position Line Nodes"},{"location":"config/waypoints/lerpable-lines/#how-to-remove-line-nodes","text":"Simply select the node you want to remove and delete it. The Nodes list will automatically update.","title":"How to Remove Line Nodes"},{"location":"config/waypoints/lerpable-lines/#how-to-change-the-order-of-line-nodes","text":"The order a agent will progress through a LerpableLine is determined by the order of the nodes in the Nodes list. To change the order, simply drag and drop the nodes in the list to the desired order. This can be done by clicking and dragging three horizontal lines to the left of the node name.","title":"How to Change the Order of Line Nodes"},{"location":"config/waypoints/lerpable-lines/#tips","text":"Always use the \"Add Path Node\" button to add new nodes. This will ensure that the node is properly named and added to the Nodes list. Creating nodes manually can result in errors if not set up correctly.","title":"Tips"},{"location":"config/waypoints/progression-paths/","text":"Progression Paths How to Locate The ProgressionPath component is located on the same GameObject as any WaypointLocation that has Has Progression Path set to true . If a ProgressionPath component is not there, it needs to be added manually. Settings Setting Description Min Perc To End Location Min percent of the progression path an agent must always travel before breaking out of the progression path. Draw Progression Path Toggles whether or not the progression path visual should appear. Progression Path Break Out Region Width Only applicable if Draw Progression Path is true . Width of the visual for the break out region of the progression path. Break Out Region Color Only applicable if Draw Progression Path is true . Color of the visual for the break out region of the progression path. Tips ProgressionPaths must also have a LerpableLine component attached to the same GameObject as they are. If it is not there, it must be added manually.","title":"ProgressionPath"},{"location":"config/waypoints/progression-paths/#progression-paths","text":"","title":"Progression Paths"},{"location":"config/waypoints/progression-paths/#how-to-locate","text":"The ProgressionPath component is located on the same GameObject as any WaypointLocation that has Has Progression Path set to true . If a ProgressionPath component is not there, it needs to be added manually.","title":"How to Locate"},{"location":"config/waypoints/progression-paths/#settings","text":"Setting Description Min Perc To End Location Min percent of the progression path an agent must always travel before breaking out of the progression path. Draw Progression Path Toggles whether or not the progression path visual should appear. Progression Path Break Out Region Width Only applicable if Draw Progression Path is true . Width of the visual for the break out region of the progression path. Break Out Region Color Only applicable if Draw Progression Path is true . Color of the visual for the break out region of the progression path.","title":"Settings"},{"location":"config/waypoints/progression-paths/#tips","text":"ProgressionPaths must also have a LerpableLine component attached to the same GameObject as they are. If it is not there, it must be added manually.","title":"Tips"},{"location":"config/waypoints/rigid-waypoint-queues/","text":"RigidWaypointQueues How to Locate The RigidWaypointQueue component is located on the any GameObject with a name containing \"RigidQueue\". They require LerpableLine components to be on the same GameObject. How to Set Up To create a new RigidWaypointQueue , simply create a GameObject and add a RigidWaypointQueue component and LerpableLine component to it. Another option is duplicating an existing RigidWaypointQueue . Next, make sure the RigidWaypointQueue is assigned to the associated WaypointLocation that uses it. The Queue Start Location of the WaypointLocation should be positioned at the back of the RigidQueue where agents would enter the queue. To find the Queue Start Location , look for a child object of the WaypointLocation with the name \"Queue Start Location\", and move it to the entrance of the RigidQueue. This is required for RigidQueues to work correctly. No additional work is required to configure a RigidWaypointQueue . Simply assign nodes as you would any other LerpableLine s .","title":"RigidWaypointQueue"},{"location":"config/waypoints/rigid-waypoint-queues/#rigidwaypointqueues","text":"","title":"RigidWaypointQueues"},{"location":"config/waypoints/rigid-waypoint-queues/#how-to-locate","text":"The RigidWaypointQueue component is located on the any GameObject with a name containing \"RigidQueue\". They require LerpableLine components to be on the same GameObject.","title":"How to Locate"},{"location":"config/waypoints/rigid-waypoint-queues/#how-to-set-up","text":"To create a new RigidWaypointQueue , simply create a GameObject and add a RigidWaypointQueue component and LerpableLine component to it. Another option is duplicating an existing RigidWaypointQueue . Next, make sure the RigidWaypointQueue is assigned to the associated WaypointLocation that uses it. The Queue Start Location of the WaypointLocation should be positioned at the back of the RigidQueue where agents would enter the queue. To find the Queue Start Location , look for a child object of the WaypointLocation with the name \"Queue Start Location\", and move it to the entrance of the RigidQueue. This is required for RigidQueues to work correctly. No additional work is required to configure a RigidWaypointQueue . Simply assign nodes as you would any other LerpableLine s .","title":"How to Set Up"},{"location":"config/waypoints/waypoint-locations/","text":"WaypointLocations How to Locate The WaypointLocation component is located on any GameObject with a name containing \"Waypoint\", all of which can be found in the hierarchy. They are typically children of GameObjects that serve as Waypoint s . Settings Setting Description Use This Location Toggles whether or not the position of the GameObject this WaypointLocation is attached to represents the position agents will pathfind to. Location Only applicable if Use This Location is false . Reference to position that agents will pathfind to. Has Queue Toggles whether or not this location has a queue. Note: If this is false , agents will not be able to form a queue to wait for this location if another agent is currently waiting at it. This is ideal for things like seating, which don't typically have queues. Use Shared Queue Only applicable if Has Queue is true . Toggles whether or not this location shares the same queue as another location. Queue Location Only applicable if Has Queue is true . Reference to the position of the queue for this location. Typically, this is a child of the GameObject this WaypointLocation is attached to, with the name \"Queue Start Location\". Queue Only applicable if Has Queue and Use Shared Queue are true . Reference to the shared queue this location uses. Min Max Wait Time Min and max wait time in seconds that an agent will wait at this location after arriving. Wait time is randomly selected each time an agent arrives. Override Outgoing Connections Toggles whether or not this location should override the waypoint connections that are defined by the Waypoint this location is a sublocation of. Connecting Waypoints Only applicable if Override Outgoing Connections is true . All possible weighted waypoints an agent can visit after this specific location. Note: These can be override the default connections defined by the Waypoint this location is a sublocation of . Has Rigid Queue Only applicable if Has Queue is true . Toggles whether or not this location has a RigidWaypointQueue . Rigid Queue Only applicable if Has Queue and Has Rigid Queue are true . Reference to this location's RigidWaypointQueue . Has Progression Path Toggles whether or not this location has a ProgressionPath . ProgressionPath s must be a component on the same GameObject as this WaypointLocation . Draw Direction Indicator Toggles whether or not the visual that shows the direction this location faces should appear. Direction Indicator ADVANCED USER SETTING . Reference to direction indicator prefab. Draw Line Connections Toggles whether or not connections between each member in this location's queue should be visualized. The color of the line connection will interpolate between Line Color Start and Line Color End as it draws between each agent in the queue. Line Color Start Only applicable if Draw Line Connections is true . Starting color of the line connection visual. Line Color End Only applicable if Draw Line Connections is true . Ending color of the line connection visual. Visualize Queue Start Toggles whether or not the start of this location's queue should be visualized. Visualize Queue Start Color Only applicable if Visualize Queue Start is true . Color of the queue start visual. Num Agents At Waypoint Uneditable field. Used for debugging how many agents are currently waiting at this location. Print Queue Button Button that prints the names of all agents currently in this location's queue to the console. Tips Queue Location should always be positioned a bit back from the Location of the WaypointLocation . This is to ensure agents waiting at the Location are not too close to agents waiting at the front of the queue. If using a RigidWaypointQueue , the Queue Location should be positioned at the back of the queue where agents would enter the queue. This is required for Rigid Queues to work correctly. If Has Progression Path is true , a ProgressionPath component must also be added to the same GameObject as the related WaypointLocation . The ProgressionPath component also requires a LerpableLine component to work correctly.","title":"WaypointLocation"},{"location":"config/waypoints/waypoint-locations/#waypointlocations","text":"","title":"WaypointLocations"},{"location":"config/waypoints/waypoint-locations/#how-to-locate","text":"The WaypointLocation component is located on any GameObject with a name containing \"Waypoint\", all of which can be found in the hierarchy. They are typically children of GameObjects that serve as Waypoint s .","title":"How to Locate"},{"location":"config/waypoints/waypoint-locations/#settings","text":"Setting Description Use This Location Toggles whether or not the position of the GameObject this WaypointLocation is attached to represents the position agents will pathfind to. Location Only applicable if Use This Location is false . Reference to position that agents will pathfind to. Has Queue Toggles whether or not this location has a queue. Note: If this is false , agents will not be able to form a queue to wait for this location if another agent is currently waiting at it. This is ideal for things like seating, which don't typically have queues. Use Shared Queue Only applicable if Has Queue is true . Toggles whether or not this location shares the same queue as another location. Queue Location Only applicable if Has Queue is true . Reference to the position of the queue for this location. Typically, this is a child of the GameObject this WaypointLocation is attached to, with the name \"Queue Start Location\". Queue Only applicable if Has Queue and Use Shared Queue are true . Reference to the shared queue this location uses. Min Max Wait Time Min and max wait time in seconds that an agent will wait at this location after arriving. Wait time is randomly selected each time an agent arrives. Override Outgoing Connections Toggles whether or not this location should override the waypoint connections that are defined by the Waypoint this location is a sublocation of. Connecting Waypoints Only applicable if Override Outgoing Connections is true . All possible weighted waypoints an agent can visit after this specific location. Note: These can be override the default connections defined by the Waypoint this location is a sublocation of . Has Rigid Queue Only applicable if Has Queue is true . Toggles whether or not this location has a RigidWaypointQueue . Rigid Queue Only applicable if Has Queue and Has Rigid Queue are true . Reference to this location's RigidWaypointQueue . Has Progression Path Toggles whether or not this location has a ProgressionPath . ProgressionPath s must be a component on the same GameObject as this WaypointLocation . Draw Direction Indicator Toggles whether or not the visual that shows the direction this location faces should appear. Direction Indicator ADVANCED USER SETTING . Reference to direction indicator prefab. Draw Line Connections Toggles whether or not connections between each member in this location's queue should be visualized. The color of the line connection will interpolate between Line Color Start and Line Color End as it draws between each agent in the queue. Line Color Start Only applicable if Draw Line Connections is true . Starting color of the line connection visual. Line Color End Only applicable if Draw Line Connections is true . Ending color of the line connection visual. Visualize Queue Start Toggles whether or not the start of this location's queue should be visualized. Visualize Queue Start Color Only applicable if Visualize Queue Start is true . Color of the queue start visual. Num Agents At Waypoint Uneditable field. Used for debugging how many agents are currently waiting at this location. Print Queue Button Button that prints the names of all agents currently in this location's queue to the console.","title":"Settings"},{"location":"config/waypoints/waypoint-locations/#tips","text":"Queue Location should always be positioned a bit back from the Location of the WaypointLocation . This is to ensure agents waiting at the Location are not too close to agents waiting at the front of the queue. If using a RigidWaypointQueue , the Queue Location should be positioned at the back of the queue where agents would enter the queue. This is required for Rigid Queues to work correctly. If Has Progression Path is true , a ProgressionPath component must also be added to the same GameObject as the related WaypointLocation . The ProgressionPath component also requires a LerpableLine component to work correctly.","title":"Tips"},{"location":"config/waypoints/waypoints/","text":"Waypoints How to Locate The Waypoint component is located on any GameObject with a name containing \"Waypoint\", all of which can be found in the hierarchy. Settings Setting Description Waypoint Name Name of the waypoint. Should Gather Metrics Toggles whether or not this waypoint should gather metrics. If false, it tracks nothing, and agents do not track anything about it. Should Wait Toggles whether or not agents should wait at this waypoint. If false, agents will not spend any time at this waypoint, and will ignore the wait time specified by the waypoint's WaypointLocation . Should Alert Only applicable if Should Gather Metrics is true . Toggles whether or not this waypoint should fire off alerts when certain conditions are met. Alert On Num Agents In Line Only applicable if Should Alert is true . Toggles whether or not this waypoint should fire off an alert when the number of agents in line at this waypoint meets or exceeds the specified threshold. Num Agents In Line Threshold Only applicable if Alert On Num Agents In Line is true . Number of agents in line at this waypoint that must be met or exceeded for an alert to be fired off. Alert On Mins In Line Only applicable if Should Alert is true . Toggles whether or not this waypoint should fire off an alert when the minutes a single agent has spent in line at this waypoint meets or exceeds the specified threshold. Num Minutes In Line Threshold Only applicable if Alert On Mins In Line is true . Number of minutes a single agent can wait in line at this waypoint that must be met or exceeded for an alert to be fired off. Connecting Waypoints All possible weighted waypoints an agent can visit after this waypoint. Note: These can be overridden by individual sublocations of this waypoint . Fallback Waypoint Waypoint that agents will use if all sublocations of this waypoint have no queue and are all currently occupied. Note: This does not need to be assigned if at least 1 sublocation has a queue . Sublocations All weighted sublocations of this waypoint. These are the physical locations that agents can pathfind to when visiting this waypoint. Draw Sublocation Connections Toggles whether or not connections between this waypoint and its sublocations should be drawn. Sublocation Connection Color Only applicable if Draw Sublocation Connections is true . Color of the sublocations connections. Add Sublocation Button Button that adds a sublocation as a child GameObject of this waypoint. Grab Sublocations Button Button that grabs all sublocations that are a child of the GameObject of this waypoint and assigns them to the Sublocations list. Setting up Waypoints To create a waypoint, simply duplicate an existing Waypoint and move it to the desired location. Setting up Alerts To set up Alerts on a Waypoint, first make sure that Should Gather Metrics is true . Then, set Should Alert to true . This will allow you to set up alerts on the Waypoint. From there, you can set up alerts based on the number of agents in line at the Waypoint, or the number of minutes a single agent has spent in line at the Waypoint. When an alert is fired off, it will be added to the timeline in the Playback menu so it can be further investigated later. Selecting a Waypoint To select a waypoint, simply click on the name label of the waypoint while the simulation is running. When a waypoint is selected correctly, its metrics display will appear. This shows information about that waypoint, such as its name, the number of agents it has processed, the total time in line agents have spent waiting for this waypoint, and more. It also allows for the waypoint to have its visualizations toggled on or off. To deselect a waypoint, simply click on the red 'X' icon in the upper right corner of the metrics display. Toggling a Specific Waypoint's Visualizations To toggle a specific waypoint's visualizations, simply press the visualization icon in the lower left corner of the metrics display of the selected waypoint.","title":"Waypoint"},{"location":"config/waypoints/waypoints/#waypoints","text":"","title":"Waypoints"},{"location":"config/waypoints/waypoints/#how-to-locate","text":"The Waypoint component is located on any GameObject with a name containing \"Waypoint\", all of which can be found in the hierarchy.","title":"How to Locate"},{"location":"config/waypoints/waypoints/#settings","text":"Setting Description Waypoint Name Name of the waypoint. Should Gather Metrics Toggles whether or not this waypoint should gather metrics. If false, it tracks nothing, and agents do not track anything about it. Should Wait Toggles whether or not agents should wait at this waypoint. If false, agents will not spend any time at this waypoint, and will ignore the wait time specified by the waypoint's WaypointLocation . Should Alert Only applicable if Should Gather Metrics is true . Toggles whether or not this waypoint should fire off alerts when certain conditions are met. Alert On Num Agents In Line Only applicable if Should Alert is true . Toggles whether or not this waypoint should fire off an alert when the number of agents in line at this waypoint meets or exceeds the specified threshold. Num Agents In Line Threshold Only applicable if Alert On Num Agents In Line is true . Number of agents in line at this waypoint that must be met or exceeded for an alert to be fired off. Alert On Mins In Line Only applicable if Should Alert is true . Toggles whether or not this waypoint should fire off an alert when the minutes a single agent has spent in line at this waypoint meets or exceeds the specified threshold. Num Minutes In Line Threshold Only applicable if Alert On Mins In Line is true . Number of minutes a single agent can wait in line at this waypoint that must be met or exceeded for an alert to be fired off. Connecting Waypoints All possible weighted waypoints an agent can visit after this waypoint. Note: These can be overridden by individual sublocations of this waypoint . Fallback Waypoint Waypoint that agents will use if all sublocations of this waypoint have no queue and are all currently occupied. Note: This does not need to be assigned if at least 1 sublocation has a queue . Sublocations All weighted sublocations of this waypoint. These are the physical locations that agents can pathfind to when visiting this waypoint. Draw Sublocation Connections Toggles whether or not connections between this waypoint and its sublocations should be drawn. Sublocation Connection Color Only applicable if Draw Sublocation Connections is true . Color of the sublocations connections. Add Sublocation Button Button that adds a sublocation as a child GameObject of this waypoint. Grab Sublocations Button Button that grabs all sublocations that are a child of the GameObject of this waypoint and assigns them to the Sublocations list.","title":"Settings"},{"location":"config/waypoints/waypoints/#setting-up-waypoints","text":"To create a waypoint, simply duplicate an existing Waypoint and move it to the desired location.","title":"Setting up Waypoints"},{"location":"config/waypoints/waypoints/#setting-up-alerts","text":"To set up Alerts on a Waypoint, first make sure that Should Gather Metrics is true . Then, set Should Alert to true . This will allow you to set up alerts on the Waypoint. From there, you can set up alerts based on the number of agents in line at the Waypoint, or the number of minutes a single agent has spent in line at the Waypoint. When an alert is fired off, it will be added to the timeline in the Playback menu so it can be further investigated later.","title":"Setting up Alerts"},{"location":"config/waypoints/waypoints/#selecting-a-waypoint","text":"To select a waypoint, simply click on the name label of the waypoint while the simulation is running. When a waypoint is selected correctly, its metrics display will appear. This shows information about that waypoint, such as its name, the number of agents it has processed, the total time in line agents have spent waiting for this waypoint, and more. It also allows for the waypoint to have its visualizations toggled on or off. To deselect a waypoint, simply click on the red 'X' icon in the upper right corner of the metrics display.","title":"Selecting a Waypoint"},{"location":"config/waypoints/waypoints/#toggling-a-specific-waypoints-visualizations","text":"To toggle a specific waypoint's visualizations, simply press the visualization icon in the lower left corner of the metrics display of the selected waypoint.","title":"Toggling a Specific Waypoint's Visualizations"},{"location":"metrics/global-metrics/","text":"Global Metrics Various metrics about the current simulation's state are tracked and information about the agents is processed as the simulation runs. Simulation Status Display The Simulation Status Display shows the current progress of the simulation. It shows the current number of agents that have spawned out of the number of agents that will spawn by the time all AgentSpawnBlock s are processed. It also shows the simulation's percentage of completion. Simulation Metrics On the left side of the simulation screen, the Metrics Panel can be found. It lists the following metrics: Metric Name Description Max Capacity Max number of agents that have been active in the simulation at one time. Agents Simulating Current number of agents active in the simulation. Agents Processed Number of agents that have been processed since the simulation began. Agents in Line Number of agents currently in line. Total Time in Line Sum of all time agents have spent in line since the simulation began. Avg Time in Line Average time any one agent has spent in line since the simulation began. The Metrics Panel can be toggled on and off while the simulation is running with the m key.","title":"Global Metrics"},{"location":"metrics/global-metrics/#global-metrics","text":"Various metrics about the current simulation's state are tracked and information about the agents is processed as the simulation runs.","title":"Global Metrics"},{"location":"metrics/global-metrics/#simulation-status-display","text":"The Simulation Status Display shows the current progress of the simulation. It shows the current number of agents that have spawned out of the number of agents that will spawn by the time all AgentSpawnBlock s are processed. It also shows the simulation's percentage of completion.","title":"Simulation Status Display"},{"location":"metrics/global-metrics/#simulation-metrics","text":"On the left side of the simulation screen, the Metrics Panel can be found. It lists the following metrics: Metric Name Description Max Capacity Max number of agents that have been active in the simulation at one time. Agents Simulating Current number of agents active in the simulation. Agents Processed Number of agents that have been processed since the simulation began. Agents in Line Number of agents currently in line. Total Time in Line Sum of all time agents have spent in line since the simulation began. Avg Time in Line Average time any one agent has spent in line since the simulation began. The Metrics Panel can be toggled on and off while the simulation is running with the m key.","title":"Simulation Metrics"},{"location":"metrics/specific-metrics/","text":"Specific Metrics Metrics of specific elements of the simulation, such as agents and Waypoint s can be viewed. Metrics for specific agents or Waypoint s can only be viewed when the simulation is running. Agent Metrics To see a specific agent's metrics, simply click on the agent in the simulation. An AgentMetricsDisplay will appear, and show information about the agent. Metric Name Description Total time in line Total time the agent has spent in line. Avg time in line Average time the agent has spent in line. Currently in line? Whether or not the agent is currently in a line. In line at waypoint If currently in a line, which waypoint the line belongs to. Currently targeting Waypoint the agent is currently targeting. Next waypoint target Waypoint the agent is will be targeting next. Waypoint Metrics To see a specific Waypoint 's metrics, simply click on the red sphere that represents the root of the Waypoint . A WaypointMetricsDisplay will appear, and show information about the Waypoint . Metric Name Description Max capacity Max number of agents that have been in line for this waypoint at one time. Total time in line Sum of all time agents have spent in line for this waypoint. Avg time in line Average time a single agent has spent in line for this waypoint. Num agents in line Number of agents currently in line for this waypoint. Num agents processed Total number of agents that have been processed at this waypoint since the simulation began.","title":"Specific Metrics"},{"location":"metrics/specific-metrics/#specific-metrics","text":"Metrics of specific elements of the simulation, such as agents and Waypoint s can be viewed. Metrics for specific agents or Waypoint s can only be viewed when the simulation is running.","title":"Specific Metrics"},{"location":"metrics/specific-metrics/#agent-metrics","text":"To see a specific agent's metrics, simply click on the agent in the simulation. An AgentMetricsDisplay will appear, and show information about the agent. Metric Name Description Total time in line Total time the agent has spent in line. Avg time in line Average time the agent has spent in line. Currently in line? Whether or not the agent is currently in a line. In line at waypoint If currently in a line, which waypoint the line belongs to. Currently targeting Waypoint the agent is currently targeting. Next waypoint target Waypoint the agent is will be targeting next.","title":"Agent Metrics"},{"location":"metrics/specific-metrics/#waypoint-metrics","text":"To see a specific Waypoint 's metrics, simply click on the red sphere that represents the root of the Waypoint . A WaypointMetricsDisplay will appear, and show information about the Waypoint . Metric Name Description Max capacity Max number of agents that have been in line for this waypoint at one time. Total time in line Sum of all time agents have spent in line for this waypoint. Avg time in line Average time a single agent has spent in line for this waypoint. Num agents in line Number of agents currently in line for this waypoint. Num agents processed Total number of agents that have been processed at this waypoint since the simulation began.","title":"Waypoint Metrics"},{"location":"metrics/visualizations/","text":"Visualizations Connections between waypoints can be visualized according to the weight of a connection relative to two waypoints. These connections will be wider when the weight of that connection is stronger. The connection visualizations will also be colored by their weight relative to other connections as defined by the configured gradients in the VisualizationManager . Toggle Visualizations Visualizations can be toggled either globally (all waypoints at once), or one at a time on a waypoint-by-waypoint basis. Global Visualizations for all waypoints can be toggled on and off at any time during a running simulation by pressing the v key. Specific Waypoint Visualizations for a specific waypoint can be toggled on and off any time during a running simulation by selecting the waypoint and toggling the visualizations for it. See Toggling a Specific Waypoint's Visualizations for more details. VisualizationManager How to Locate The VisualizationManager component is located on the GameObject with the name \"VisualizationManager\", which can be found in the hierarchy. Settings Setting Description Visualization Line ADVANCED USER SETTING . Reference to LineRenderer to use for visualizations. Waypoint Connection Gradient Gradient of visualization colors defined by the weight of connections between waypoints. From left to right, colors represent smaller to larger weights. Sublocation Connection Gradient Gradient of visualization colors defined by the weight of sublocations for a single waypoint. From left to right, colors represent smaller to larger weights. Max Line Width Max width the line visualization for connections can be.","title":"Visualizations"},{"location":"metrics/visualizations/#visualizations","text":"Connections between waypoints can be visualized according to the weight of a connection relative to two waypoints. These connections will be wider when the weight of that connection is stronger. The connection visualizations will also be colored by their weight relative to other connections as defined by the configured gradients in the VisualizationManager .","title":"Visualizations"},{"location":"metrics/visualizations/#toggle-visualizations","text":"Visualizations can be toggled either globally (all waypoints at once), or one at a time on a waypoint-by-waypoint basis.","title":"Toggle Visualizations"},{"location":"metrics/visualizations/#global","text":"Visualizations for all waypoints can be toggled on and off at any time during a running simulation by pressing the v key.","title":"Global"},{"location":"metrics/visualizations/#specific-waypoint","text":"Visualizations for a specific waypoint can be toggled on and off any time during a running simulation by selecting the waypoint and toggling the visualizations for it. See Toggling a Specific Waypoint's Visualizations for more details.","title":"Specific Waypoint"},{"location":"metrics/visualizations/#visualizationmanager","text":"","title":"VisualizationManager"},{"location":"metrics/visualizations/#how-to-locate","text":"The VisualizationManager component is located on the GameObject with the name \"VisualizationManager\", which can be found in the hierarchy.","title":"How to Locate"},{"location":"metrics/visualizations/#settings","text":"Setting Description Visualization Line ADVANCED USER SETTING . Reference to LineRenderer to use for visualizations. Waypoint Connection Gradient Gradient of visualization colors defined by the weight of connections between waypoints. From left to right, colors represent smaller to larger weights. Sublocation Connection Gradient Gradient of visualization colors defined by the weight of sublocations for a single waypoint. From left to right, colors represent smaller to larger weights. Max Line Width Max width the line visualization for connections can be.","title":"Settings"},{"location":"recording/playback/","text":"Playback How to Locate To view the playback menu, simply press 'r' to open the menu. Please note that the simulation must be fully completed before the playback menu can be opened. A simulation is considered fully completed when all agents have reached their final waypoint and despawned. A popup message will appear in the middle of the screen when the simulation is completed. How to Use To use the playback feature, simply use the time controls in the lower left corner to control the playback speed of the recording. Just like with the simulation Time Controls , the playback speed can be paused, sped up, or slowed down. Pressing the \"Play\" button will play the simulation from the current time (if it is currently paused), and also reset the playback speed to 1x. The current time in the playback can also be set by clicking on the timeline to jump the playback to that moment in time, similar to how a YouTube video might work. The current progress of the playback is displayed above the timeline, showing the current time in the playback, as well as the percentage of the playback that has been completed. Viewing Alerts Alerts are displayed on the timeline as yellow \"flags\". These flags can be clicked on to view the alert in more detail. The alert will detail which waypoint fired off the alert, what type of alert it was, and a description about what specifically caused the alert to be fired off. Currently, alerts are fired off once and only once when a specific condition is met. This means that if the condition is met again on the same waypoint, the alert will not be fired off again. For example, if a waypoint is set to fire off an alert when the waypoint's line gets past 10 agents, the alert will fire off only when this threshold is met. If the line then shortens to 9 agents, and then grows back to 11 agents, the alert will not fire off again. This is to prevent the timeline from being cluttered with alerts that are fired off multiple times for essentially the same reason. In the future, we may add the ability to define a cool-down period for alerts, so that they can be fired off again after a certain amount of time has passed, or once a condition has been unmet and then met again. Limitations Currently, the playback feature is limited in the following ways: Simulations must be fully completed before they can be played back. Simulations that are stopped before they complete will generate a corrupt recording that will break if you try to play it back. Playback frame rate is limited to prevent performance issues and may cause playback to appear slightly less smooth than the actual simulation. Only agents are recorded in the playback, meaning metrics changing over time (such as the number of agents processed by a waypoint at that point in time) are not recorded and cannot be viewed changing over time. Level layout changes are not recorded. If you record a simulation, then change the level layout, then play back the recording, the level layout will not change back to what it was when the recording was made. To get around this, you can duplicate the level and make changes to the duplicate, then record the simulation on the duplicate level. Just keep in mind that recordings will only work on the level they were recorded on. All of the above limitations can be overcome by further development.","title":"Playback"},{"location":"recording/playback/#playback","text":"","title":"Playback"},{"location":"recording/playback/#how-to-locate","text":"To view the playback menu, simply press 'r' to open the menu. Please note that the simulation must be fully completed before the playback menu can be opened. A simulation is considered fully completed when all agents have reached their final waypoint and despawned. A popup message will appear in the middle of the screen when the simulation is completed.","title":"How to Locate"},{"location":"recording/playback/#how-to-use","text":"To use the playback feature, simply use the time controls in the lower left corner to control the playback speed of the recording. Just like with the simulation Time Controls , the playback speed can be paused, sped up, or slowed down. Pressing the \"Play\" button will play the simulation from the current time (if it is currently paused), and also reset the playback speed to 1x. The current time in the playback can also be set by clicking on the timeline to jump the playback to that moment in time, similar to how a YouTube video might work. The current progress of the playback is displayed above the timeline, showing the current time in the playback, as well as the percentage of the playback that has been completed.","title":"How to Use"},{"location":"recording/playback/#viewing-alerts","text":"Alerts are displayed on the timeline as yellow \"flags\". These flags can be clicked on to view the alert in more detail. The alert will detail which waypoint fired off the alert, what type of alert it was, and a description about what specifically caused the alert to be fired off. Currently, alerts are fired off once and only once when a specific condition is met. This means that if the condition is met again on the same waypoint, the alert will not be fired off again. For example, if a waypoint is set to fire off an alert when the waypoint's line gets past 10 agents, the alert will fire off only when this threshold is met. If the line then shortens to 9 agents, and then grows back to 11 agents, the alert will not fire off again. This is to prevent the timeline from being cluttered with alerts that are fired off multiple times for essentially the same reason. In the future, we may add the ability to define a cool-down period for alerts, so that they can be fired off again after a certain amount of time has passed, or once a condition has been unmet and then met again.","title":"Viewing Alerts"},{"location":"recording/playback/#limitations","text":"Currently, the playback feature is limited in the following ways: Simulations must be fully completed before they can be played back. Simulations that are stopped before they complete will generate a corrupt recording that will break if you try to play it back. Playback frame rate is limited to prevent performance issues and may cause playback to appear slightly less smooth than the actual simulation. Only agents are recorded in the playback, meaning metrics changing over time (such as the number of agents processed by a waypoint at that point in time) are not recorded and cannot be viewed changing over time. Level layout changes are not recorded. If you record a simulation, then change the level layout, then play back the recording, the level layout will not change back to what it was when the recording was made. To get around this, you can duplicate the level and make changes to the duplicate, then record the simulation on the duplicate level. Just keep in mind that recordings will only work on the level they were recorded on. All of the above limitations can be overcome by further development.","title":"Limitations"},{"location":"recording/simulation-setup/","text":"Saving/Loading Simulation Recordings How to Locate When starting up the program, you will be greeted with the Simulation Setup menu. This menu is used to either start a new simulation and record it, or load a previously recorded simulation and play it back. How to Save a Recording To start a new simulation recording, simply press \"Record new simulation\" on the simulation setup menu. This will open a file explorer window to the folder where the recording must be saved. Note: Currently, recordings can ONLY be saved to this folder. Once this window has opened, you must create a new folder with the name of the recording. This folder will contain all of the files that make up the recording. Once the folder has been created, ensure that it is selected (This can be verified by seeing it highlighted, and also the folder name in the bottom text box is the same name. See the above image as an example.), and press \"Select Folder\" to begin the simulation. When the simulation completes, you will be able to view the recording in the Playback menu as normal. How to Load a Recording To load an existing recording, first ensure that the currently loaded scene is the same scene that the recording was originally made on. If not, then the results of the playback will look incorrect, as currently only agent positions are recorded, not the level layout. Next, simply press \"Load saved simulation\" on the simulation setup menu. This will open a file explorer window to the folder where the recording must be loaded from. If the recording you want to load is not in this folder, move it to this folder before continuing. Next, select the recording folder, and press \"Select Folder\" to begin the loading process. Once the loading process is complete, the Playback menu will open automatically, and the recording can be viewed as normal. Transferring Recordings Between Machines Recordings can be transferred between machines just as any other folder might be. Simply copy the recording folder from the machine it was saved on, and paste it into the same folder on the machine you want to load it on. Then, follow the usual steps to load the recording . Limitations Currently, the recording saving/loading feature is limited in the following ways: Simulations must be fully completed to record properly. Simulations that are stopped before they complete will generate a corrupt recording that will break if you try to play it back. Recording files must ALWAYS be saved in and loaded from the Application.persistentDataPath folder location. The path to the folder on Windows looks something like this: C:\\Users\\{YOUR_USERNAME_HERE}\\AppData\\LocalLow\\DefaultCompany\\Waytrics . This is always the default folder that is opened when saving or loading a recording, so you should never have to worry about this so long as all recordings are saved in and loaded from that folder. Depending on the complexity of the recording (especially large numbers of agents simulating over a small period of time), the recording may have slight hitches as files are saved/loaded. This usually isn't noticeable, but may be more noticeable on slower machines. In the event that a file is taking too long to save/load (more than a second or so), a popup message will appear in the middle of the screen to let you know that the program is still working on saving/loading the recording file. All of the above limitations can be overcome by further development.","title":"Saving/Loading"},{"location":"recording/simulation-setup/#savingloading-simulation-recordings","text":"","title":"Saving/Loading Simulation Recordings"},{"location":"recording/simulation-setup/#how-to-locate","text":"When starting up the program, you will be greeted with the Simulation Setup menu. This menu is used to either start a new simulation and record it, or load a previously recorded simulation and play it back.","title":"How to Locate"},{"location":"recording/simulation-setup/#how-to-save-a-recording","text":"To start a new simulation recording, simply press \"Record new simulation\" on the simulation setup menu. This will open a file explorer window to the folder where the recording must be saved. Note: Currently, recordings can ONLY be saved to this folder. Once this window has opened, you must create a new folder with the name of the recording. This folder will contain all of the files that make up the recording. Once the folder has been created, ensure that it is selected (This can be verified by seeing it highlighted, and also the folder name in the bottom text box is the same name. See the above image as an example.), and press \"Select Folder\" to begin the simulation. When the simulation completes, you will be able to view the recording in the Playback menu as normal.","title":"How to Save a Recording"},{"location":"recording/simulation-setup/#how-to-load-a-recording","text":"To load an existing recording, first ensure that the currently loaded scene is the same scene that the recording was originally made on. If not, then the results of the playback will look incorrect, as currently only agent positions are recorded, not the level layout. Next, simply press \"Load saved simulation\" on the simulation setup menu. This will open a file explorer window to the folder where the recording must be loaded from. If the recording you want to load is not in this folder, move it to this folder before continuing. Next, select the recording folder, and press \"Select Folder\" to begin the loading process. Once the loading process is complete, the Playback menu will open automatically, and the recording can be viewed as normal.","title":"How to Load a Recording"},{"location":"recording/simulation-setup/#transferring-recordings-between-machines","text":"Recordings can be transferred between machines just as any other folder might be. Simply copy the recording folder from the machine it was saved on, and paste it into the same folder on the machine you want to load it on. Then, follow the usual steps to load the recording .","title":"Transferring Recordings Between Machines"},{"location":"recording/simulation-setup/#limitations","text":"Currently, the recording saving/loading feature is limited in the following ways: Simulations must be fully completed to record properly. Simulations that are stopped before they complete will generate a corrupt recording that will break if you try to play it back. Recording files must ALWAYS be saved in and loaded from the Application.persistentDataPath folder location. The path to the folder on Windows looks something like this: C:\\Users\\{YOUR_USERNAME_HERE}\\AppData\\LocalLow\\DefaultCompany\\Waytrics . This is always the default folder that is opened when saving or loading a recording, so you should never have to worry about this so long as all recordings are saved in and loaded from that folder. Depending on the complexity of the recording (especially large numbers of agents simulating over a small period of time), the recording may have slight hitches as files are saved/loaded. This usually isn't noticeable, but may be more noticeable on slower machines. In the event that a file is taking too long to save/load (more than a second or so), a popup message will appear in the middle of the screen to let you know that the program is still working on saving/loading the recording file. All of the above limitations can be overcome by further development.","title":"Limitations"}]}